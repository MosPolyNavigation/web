@import '../../../styles/base';

.searchButtonWrapper {
  position: absolute;
  inset: 0;
  pointer-events: none;

  display: flex;

  .filler {
    flex-grow: 0.5;

    @media (width > 900px) {
      display: none;
    }

    transition: flex-grow $search-anim-dur ease-out;

    &.fillerInner {
      transition: flex-grow 300ms ease;
    }
  }

  .searchButton {
    height: $size-40;
    width: toRem(140);
    @media (width > 900px) {
      width: toRem(290);
    }
    @extend %border-default;
    @extend %shadow-default;
    background-color: $color-1;
    color: $color-3;
    //cursor: text;
    pointer-events: auto;
    user-select: none;

    transition: all $search-anim-dur ease;


    .secondStroke {
      position: relative;
      border: $color-2 toRem(2) solid;
      border-radius: $inf;
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      padding: 0 toRem(17);

      .searchText {
        margin-left: $size-10;
        transition: all $search-anim-dur ease;
      }

      .searchIcon {
        transition: all $search-anim-dur ease;
      }

      input {
        position: absolute;
        inset: 0;
        opacity: 0;
        //visibility: visible;
        //@media (-webkit-min-device-pixel-ratio: 1) {
        //  pointer-events: auto;
        //  //outline: #63E3D4 10px solid;
        //}
        //pointer-events: none;
        //z-index: 1;

        //background-color: cadetblue;

        padding-left: toRem(47);
        padding-right: $size-15;
      }
    }
  }
}

.searchButtonWrapper.expanded {
  .filler {
    flex-grow: 0;
  }

  .searchButton {
    width: calc(100% - $size-40 - $size-10);

    .searchText {
      animation: hide 0s $search-anim-dur both;
      color: $color-4;

      @keyframes hide {
        from {
          visibility: visible;
          opacity: 1;
        }
        to {
          visibility: hidden;
          opacity: 0;
        }
      }
    }

    input {
      animation: show 0s $search-anim-dur both;
      visibility: visible;
      color: $color-5;
      pointer-events: auto;

      &::placeholder {
        color: $color-4;
        opacity: 1;
      }

      @keyframes show {
        from {
          //visibility: hidden;
          opacity: 0;
        }
        to {
          //visibility: visible;
           opacity: 1;
        }
      }
    }
  }
}
